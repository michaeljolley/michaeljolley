---
export async function getStaticPaths({ rss }) {
  
  const allPosts = await Astro.glob('../../../content/blog/**/*.md');
  const sortedPosts = allPosts.sort((a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date));

  let postTags = [];
  for (const post of allPosts) {
    postTags.push(...post.frontmatter.tags);
  }

  const distinct = (value, index, self) => {
    return self.indexOf(value) === index;
  }

  postTags = postTags.filter(distinct).sort();

  return postTags.map((tag) => {
    const tagPosts = sortedPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: {
        slug: tag
      },
      props: {
        posts: tagPosts
      }
    }
  });
}

import titleCase from 'ap-style-title-case'
import Layout from '../../../layouts/Default.astro'
import BlogCard from '../../../components/BlogCard.astro';

const { posts } = Astro.props;
const { slug } = Astro.params;

const properTag = titleCase(slug.toString().replace('-', ' '));

const title = `Blog Posts about ${properTag} | Michael Jolley is the Bald Bearded Builder`;
const description = `All blog posts written by Michael Jolley`;
const permalink = `https://baldbeardedbuilder.com/blog/tags/${slug}`;
const tags = [ slug, 'dotnet', 'javascript', 'developer-experience', 'learn-in-public'];
---

<Layout {title} {description} {permalink} {tags}>
  <article>
    <div class="cardList full">
      <h1>{properTag} <span>Posts</span></h1>
      <ul>
				{
					posts.map((post) => 
						<li>
							<BlogCard post={post} />
						</li>
					)
				}
      </ul>
    </div>
  </article>
</Layout>